{
    "format": "json",
    "view": "div",
    "doc": "documentation.xml",
    "root": "3.13.11",
    "rootNode": "3.13.11",
    "id": "css-styling-components",
    "odd": "docbook.odd",
    "next": "3.13.13",
    "previous": "3.13",
    "nextId": "css-styling-external",
    "previousId": "css-styling",
    "switchView": null,
    "content": "<!DOCTYPE html>\n<div class=\"content \"><div class=\"tei-section3\" id=\"css-styling-components\"><pb-observable data=\"3.13.11,3.13.11\" emit=\"transcription\">\n      <h2 class=\"tei-title6 title\">Customizing web components styling</h2>\n      <p class=\"tei-para\">A web component completely shields its content, so it cannot be styled from outside.\n          Web component styles remain encapsulated, preventing style contamination between\n          individual components and general application context. A blessing in general, allowing\n          components to be scripted and styled without the fear of collision with other parts of the\n          page, but poses additional challenges when adjusting the look and feel of a component to\n          fit a project's theme.</p>\n      <p class=\"tei-para\">\n        For Publisher, encapsulation of web components means that definitions in\n        <span class=\"tei-code2 code\">theme.css</span>\n        or equivalent project customization CSS files are not able to\n          directly govern web components styling.\n      </p>\n      <p class=\"tei-para\">\n        While some aspects of component styling remained unaccessible for customization in\n          versions preceding Publisher 6, currently\n        <span class=\"tei-code2 code\">pb-components</span>\n        expose style\n          properties to the outside world via standard CSS variables. This way variables like\n        <span class=\"tei-code2 code\">--pb-footnote-color</span>\n        defined in\n        <span class=\"tei-code2 code\">theme.css</span>\n        can be accessed by\n          e.g.\n        <span class=\"tei-code2 code\">pb-view</span>\n        component and thus determine the color of the footnote marker in\n          the rendered transcription.\n      </p>\n\n      <p class=\"tei-para\">Note that while you cannot change the inner appearance of a component except by\n          setting its custom CSS properties, you can style the component itself within the HTML\n          template, e.g. to position it within the layout of the page.</p>\n    </pb-observable></div></div>",
    "footnotes": "",
    "userParams": {
        "webcomponents": 7
    },
    "collection": "doc"
}