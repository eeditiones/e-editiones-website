{
    "format": "json",
    "view": "div",
    "doc": "documentation.xml",
    "root": "3.12.9.13",
    "rootNode": "3.12.9.13",
    "id": "odd-customization-predicates",
    "odd": "docbook.odd",
    "next": "3.12.9.15",
    "previous": "3.12.9.11",
    "nextId": "odd-customization-parameters",
    "previousId": "odd-customization-other-behaviours",
    "switchView": null,
    "content": "<!DOCTYPE html><html><head></head><body><div class=\"content \"><div class=\"tei-section4\" id=\"odd-customization-predicates\"><pb-observable data=\"3.12.9.13,3.12.9.13\" emit=\"transcription\">\n        <h3 class=\"tei-title7 title\">Predicates and multiple models</h3>\n        <p class=\"tei-para\"> Next up, we may want to highlight the various places and people occurring within the\n          text. They are all marked up with the <span class=\"tei-tag code\">name</span> tag, using different\n            <span class=\"tei--element\">@type</span> attributes. Create a new element spec for <span class=\"tei-tag code\">name</span> and\n          supply some color to the names. </p>\n        <figure class=\"tei-figure2 figure\"><span class=\"tei--element\">\n            <span class=\"tei--element\">\n              <img src=\"editor-screen4.png\" class=\"tei-imagedata2\" title=\"\">\n            </span>\n          </span><figcaption> Color the <span class=\"tei-tag code\">name</span> tags </figcaption></figure>\n        <p class=\"tei-para\"> And the XML for the entire <span class=\"tei-tag code\">elementSpec</span> : </p>\n        <pb-code-highlight class=\"tei-programlisting5\" language=\"xml\">&lt;elementSpec ident=\"name\" mode=\"change\"&gt;\n    &lt;model behaviour=\"inline\"&gt;\n        &lt;outputRendition&gt;\n        color: #FF9900;\n        &lt;/outputRendition&gt;\n    &lt;/model&gt;\n&lt;/elementSpec&gt;</pb-code-highlight>\n        <p class=\"tei-para\"> This rule affects places and people alike since both these categories are marked up\n          with <span class=\"tei-tag code\">name</span> tag. If we'd like to treat people and places differently we'd need\n          separate models for them and a mechanism to distinguish between the two. The processing\n          model uses <span class=\"tei--element\">predicate</span> to make such distinctions: a model rule will only be\n          used if the XPath expression in its predicate matches the current node being processed.\n          Let's add another model and give it a predicate: </p>\n        <figure class=\"tei-figure2 figure\"><span class=\"tei--element\">\n            <span class=\"tei--element\">\n              <img src=\"editor-screen5.png\" class=\"tei-imagedata2\" title=\"\">\n            </span>\n          </span><figcaption>Distinguish places and people</figcaption></figure>\n        <pb-code-highlight class=\"tei-programlisting5\" language=\"xml\">&lt;elementSpec ident=\"name\" mode=\"change\"&gt;\n    &lt;model predicate=\"@type='place'\" behaviour=\"inline\"&gt;\n        &lt;outputRendition &gt;\n        color: #0077FF;\n        &lt;/outputRendition&gt;\n    &lt;/model&gt;\n    &lt;model behaviour=\"inline\"&gt;\n        &lt;outputRendition&gt;\n        color: #FF9900;\n        &lt;/outputRendition&gt;\n    &lt;/model&gt;\n&lt;/elementSpec&gt;</pb-code-highlight>\n        <div class=\"tei-note3 note\"><h4 class=\"tei-title4\">Important</h4><p class=\"tei-para\">The order of models within the element spec is important. If you move the model with\n            the predicate to the bottom, all names will appear in the same color again. This happens\n            because the processor walks through the models until it finds the first one matching the\n            current node. If the model without predicate is first, it will always win over the one\n            with the predicate!</p><p class=\"tei-para\">Also, if there's more than one matching model, only the first will be chosen.</p></div>\n      </pb-observable></div></div></body></html>",
    "footnotes": "",
    "userParams": {
        "webcomponents": 7
    },
    "collection": "doc"
}