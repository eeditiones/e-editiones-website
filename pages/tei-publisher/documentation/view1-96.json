{
    "format": "json",
    "view": "div",
    "doc": "documentation.xml",
    "root": "3.24.21.9",
    "rootNode": "3.24.21.9",
    "id": "multiple-odds",
    "odd": "docbook.odd",
    "next": "3.24.21.9.13",
    "previous": "3.24.21",
    "nextId": "multiple-odds-collection",
    "previousId": "appgen-modify",
    "switchView": null,
    "content": "<!DOCTYPE html><html><head></head><body><div class=\"content \"><div class=\"tei-section4\" id=\"multiple-odds\"><pb-observable data=\"3.24.21.9,3.24.21.9\" emit=\"transcription\"><h3 class=\"tei-title7 title\">Using Multiple ODDs</h3><p class=\"tei-para\">For performance reasons, the mechanism used by generated apps to transform a document\n          via an ODD is slightly different to the one in the main TEI Publisher app: while TEI\n          Publisher resolves ODDs dynamically, generated apps use a static lookup method. </p><p class=\"tei-para\">The static method is much faster, resulting in better overall performance, but as a\n          consequence ODDs are not automatically detected by the app, and need to be explicitly\n          registered.</p><p class=\"tei-para\"> Each generated app will by default use a single ODD for all transformations but it is\n          possible to add additional ODDs, e.g. to be used with a <span class=\"tei-code2 code\">pb-view</span> in a custom\n          HTML template. If multiple ODDs are selected when generating the app, the app generator\n          will take care of registering those ODDs. If you would like to add ODDs manually later,\n          the procedure is as follows: </p><ol class=\"tei-procedure\"><li class=\"tei-step\">\n            <p class=\"tei-para\"> Upload the ODD to the <span class=\"tei-filename code\">resources/odd</span> collection below your\n              app root. This can either be done via <span class=\"tei-emphasis2\">eXide</span> or the <span class=\"tei-guibutton guibutton\">\n                Upload</span> panel on the start page of your app. </p>\n          </li><li class=\"tei-step\">\n            <p class=\"tei-para\"> In <span class=\"tei-filename code\">modules/config.xqm</span> find the variable called <span class=\"tei-parameter code\">\n                $config:odd-available</span> and add the name of the new ODD to the sequence. </p>\n            <pb-code-highlight class=\"tei-programlisting5\" language=\"xquery\">(:~\n : The main ODD to be used by default\n :)\ndeclare variable $config:default-odd :=\"shakespeare.odd\";\n\n(:~\n : Complete list of ODD files used by the app. If you add another ODD to this list,\n : make sure to run modules/generate-pm-config.xql to update the main configuration\n : module for transformations (modules/pm-config.xql).\n :)\ndeclare variable $config:odd-available :=(\"shakespeare.odd\");</pb-code-highlight>\n          </li><li class=\"tei-step\">\n            <p class=\"tei-para\"> In eXide, open <span class=\"tei-filename code\">modules/generate-pm-config.xql</span> (path relative\n              to your app root) and execute it once. This will regenerate the XQuery module\n                <span class=\"tei-filename code\"> modules/pm-config.xql</span>, which registers all the ODD modules\n              known to the app. </p>\n          </li><li class=\"tei-step\">\n            <p class=\"tei-para\">Additionally you need to regenerate all ODDs used by the app by either</p>\n            <ol class=\"tei-orderedlist\"><li class=\"tei-listitem\">\n                <p class=\"tei-para\"> Clicking the <span class=\"tei-guibutton guibutton\">Regenerate all ODDs</span> button on the start\n                  page of the app </p>\n              </li><li class=\"tei-listitem\">\n                <p class=\"tei-para\"> Via the api documentation page <span class=\"tei-filename code\">api.html</span> by executing the\n                    <span class=\"tei-parameter code\"> POST</span> version of the <span class=\"tei-code2 code\">/api/odd</span>. </p>\n              </li></ol>\n          </li></ol></pb-observable></div></div></body></html>",
    "footnotes": "",
    "userParams": {
        "webcomponents": 7
    },
    "collection": "doc"
}