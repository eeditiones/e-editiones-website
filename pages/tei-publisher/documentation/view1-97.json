{
    "format": "json",
    "view": "div",
    "doc": "documentation.xml",
    "root": "3.24",
    "rootNode": "3.24",
    "id": "customization-best-practice",
    "odd": "docbook.odd",
    "next": "3.26",
    "previous": "3.22.25",
    "nextId": "updating",
    "previousId": "appgen-build",
    "switchView": null,
    "content": "<!DOCTYPE html><html><head></head><body><div class=\"content \"><div class=\"tei-section4\" id=\"customization-best-practice\"><pb-observable data=\"3.24,3.24\" emit=\"transcription\">\n    <h1 class=\"tei-title7 title\">Best Practice Recommendations</h1>\n    <p class=\"tei-para\">In case you'd wish to further customize the generated app it's worth to keep the changes\n      as much separated from the generated code as possible to allow for future alignment with newer\n      versions of the TEI Publisher. </p>\n    <p class=\"tei-para\"> The generated app shares most of its XQuery libraries with the main TEI Publisher app. A\n      copy of those is included in the <span class=\"tei-filename code\">lib/</span> collection of the generated app and\n        <span class=\"tei-emphasis1\">should not</span> be modified! This way you can later update the\n      libraries to a newer TEI Publisher release without breaking your app. Including the libraries\n      in the generated app creates some redundancy, but we chose to accept this trade-off to make it\n      easier to view and modify everything relevant to the app. </p>\n    <p class=\"tei-para\"> Meanwhile, if you find that modifications of <span class=\"tei-filename code\">lib/</span> modules are\n      necessary, please consider if your change would be generally beneficial for TEI Publisher and\n      create PR for the TEI Publisher if so. </p>\n    <p class=\"tei-para\"> It is <span class=\"tei-emphasis1\">considered safe</span> : </p>\n    <ol class=\"tei-orderedlist\"><li class=\"tei-listitem\">\n        <p class=\"tei-para\"> to modify all HTML templates below <span class=\"tei-filename code\">templates/</span> as well as\n            <span class=\"tei-filename code\"> index.html</span> and <span class=\"tei-filename code\">search.html</span> in the root of the\n          app </p>\n      </li><li class=\"tei-listitem\">\n        <p class=\"tei-para\"> to change XQuery modules in <span class=\"tei-filename code\">modules</span>, excluding those in\n            <span class=\"tei-filename code\"> modules/lib</span>\n        </p>\n      </li><li class=\"tei-listitem\">\n        <p class=\"tei-para\"> to add images, fonts or change i18n translations below <span class=\"tei-filename code\">resources</span>\n        </p>\n      </li><li class=\"tei-listitem\">\n        <p class=\"tei-para\"> to add custom API functions (written in XQuery) to\n            <span class=\"tei-filename code\">custom-api.json</span> and <span class=\"tei-filename code\">custom-api.xql</span>\n        </p>\n      </li></ol>\n    <p class=\"tei-para\"> The following core XQuery modules in every app are safe to be modified (all are stored in\n        <span class=\"tei-filename code\"> modules</span> subcollection: </p>\n    <dl><dt>\n          <span class=\"tei-filename code\">config.xqm</span>\n        </dt><dd>\n          <p class=\"tei-para\">The main configuration file for the app. It contains a number of parameters which\n            control important aspects.</p>\n        </dd><dt>\n          <span class=\"tei-filename code\">custom-api.xql</span>\n        </dt><dd>\n          <p class=\"tei-para\">Custom API functions should be defined in this module - or a module imported by it.\n            Also, HTML templating modules should be imported into this module to be registered with\n            the TEI Publisher.</p>\n        </dd><dt>\n          <span class=\"tei-filename code\">app.xql</span>\n        </dt><dd>\n          <p class=\"tei-para\">Add your own HTML templating functions in XQuery here if needed. With TEI Publisher\n            4.0 or later, there should be less of a need to extend this file as most of the\n            application logic is realized via web components.</p>\n        </dd><dt>\n          <span class=\"tei-filename code\">pm-config.xql</span>\n        </dt><dd>\n          <p class=\"tei-para\"> This file is usually generated by calling\n              <span class=\"tei-filename code\">modules/generate-pm-config.xql</span> (see the <a href=\"/?odd=docbook.odd&amp;view=div&amp;id=multiple-odds\" class=\"tei-link3\" target=\"\">corresponding section</a>). It defines the functions to be\n            called for rendering TEI content via the processing model. It imports the modules\n            generated from your ODD and assigns them to variables as function pointers. This\n            approach is much more efficient than the dynamic lookups done by the main TEI Publisher\n            app. It has been production tested on large web sites. </p>\n        </dd><dt>\n          <span class=\"tei-filename code\">navigation-*.xql</span>\n        </dt><dd>\n          <p class=\"tei-para\">This group of modules contains functions relevant for the display and navigation of\n            documents corresponding to a given document type</p>\n        </dd><dt>\n          <span class=\"tei-filename code\">query-*.xql</span>\n        </dt><dd>\n          <p class=\"tei-para\">Modules with functions powering the search features</p>\n        </dd><dt>\n          <span class=\"tei-filename code\">view.xql</span>\n        </dt><dd>\n          <p class=\"tei-para\">The main module of the app. This module initializes eXist's templating system. The\n            only case when it should be modified is if you want to add further XQuery library\n            modules containing template functions.</p>\n        </dd></dl>\n  </pb-observable></div></div></body></html>",
    "footnotes": "",
    "userParams": {
        "webcomponents": 7
    },
    "collection": "doc"
}