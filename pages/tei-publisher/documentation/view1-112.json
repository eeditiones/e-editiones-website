{
    "format": "json",
    "view": "div",
    "doc": "documentation.xml",
    "root": "3.31.11",
    "rootNode": "3.31.11",
    "id": "embedding-webcomponents",
    "odd": "docbook.odd",
    "next": "3.33",
    "previous": "3.31.9",
    "nextId": "custom-components",
    "previousId": "embedding-whole-doc",
    "switchView": null,
    "content": "<!DOCTYPE html><html><head></head><body><div class=\"content \"><div class=\"tei-section3\" id=\"embedding-webcomponents\"><pb-observable data=\"3.31.11,3.31.11\" emit=\"transcription\">\n      <h2 class=\"tei-title6 title\">Embedding webcomponents for navigation</h2>\n      <p class=\"tei-para\">For longer documents, embedding the entire content in a page may not be too\n          user-friendly. A better way is to use the library of webcomponents provided by TEI\n          Publisher. This way, we can show the content page by page or division by division,\n          allowing the reader to navigate between sections.</p>\n      <pb-codepen class=\"tei-programlisting3\" hash=\"ExVQKBK\" user=\"wolfgangmm\" theme=\"dark\" height=\"480\" editable=\"editable\"></pb-codepen>\n      <p class=\"tei-para\">Because webcomponents are part of the HTML5 standard and supported natively by most\n          modern browsers, we can easily import the component library which is at the core of the\n          TEI Publisher app and reuse the components it provides in other contexts. They should work\n          in any HTML5 page, no matter if it was written by hand, is generated by PHP, Python or a\n          CMS.</p>\n      <p class=\"tei-para\">For a start, the page should import two scripts in its header:</p>\n      <pb-code-highlight class=\"tei-programlisting5\" language=\"html\" line-numbers=\"line-numbers\">&lt;script src=\"https://unpkg.com/@webcomponents/webcomponentsjs@2.4.3/webcomponents-loader.js\"&gt;&lt;/script&gt;\n&lt;script type=\"module\" src=\"https://unpkg.com/@teipublisher/pb-components@latest/dist/pb-components-bundle.js\"&gt;&lt;/script&gt;</pb-code-highlight>\n      <p class=\"tei-para\">\n        This imports necessary\n        <span class=\"tei-code2 code\">pb-components</span>\n        libraries from\n        <span class=\"tei-code2 code\">unpkg.com</span>\n        CDN which is considered the best practice for web sites.\n      </p>\n      <p class=\"tei-para\">\n        The second\n        <span class=\"tei-tag code\">script</span>\n        tag imports all the components provided by TEI Publisher.\n          Note that here\n        <span class=\"tei-code2 code\">pb-components@latest</span>\n        points to the latest available bundle,\n          but you could specify a concrete version number to make sure your website uses a fixed\n          release.\n      </p>\n\n      <p class=\"tei-para\">\n        Now let's actually use the components to display Shakespeare's\n        <span class=\"tei-emphasis2\">Romeo and\n            Juliet</span>\n        : in the HTML\n        <span class=\"tei-tag code\">body</span>\n        , include the following snippet:\n      </p>\n      <pb-code-highlight class=\"tei-programlisting5\" language=\"html\" line-numbers=\"line-numbers\">&lt;pb-page endpoint=\"https://teipublisher.com/exist/apps/tei-publisher\"&gt;\n    &lt;pb-document id=\"document1\" path=\"test/F-rom.xml\" odd=\"shakespeare\"&gt;&lt;/pb-document&gt;\n    &lt;!-- Navigate to previous page --&gt;\n    &lt;pb-navigation direction=\"backward\" unit=\"page\" keyboard=\"left\"&gt;\n      &lt;paper-button&gt;\n         &lt;iron-icon icon=\"icons:chevron-left\"&gt;&lt;/iron-icon&gt;\n      &lt;/paper-button&gt;\n    &lt;/pb-navigation&gt;\n    &lt;pb-view id=\"view1\" src=\"document1\" view=\"page\"&gt;&lt;/pb-view&gt;\n    &lt;!-- Navigate to next page --&gt;\n    &lt;pb-navigation direction=\"forward\" unit=\"page\" keyboard=\"right\"&gt;\n      &lt;paper-button&gt;\n         &lt;iron-icon icon=\"icons:chevron-right\"&gt;&lt;/iron-icon&gt;\n      &lt;/paper-button&gt;\n    &lt;/pb-navigation&gt;\n&lt;/pb-page&gt;</pb-code-highlight>\n      <p class=\"tei-para\">\n        In the\n        <span class=\"tei-tag code\">pb-page</span>\n        <span class=\"tei-code2 code\">endpoint</span>\n        attribute we need to provide a critical piece of information: the\n          URL of the TEI Publisher instance for all the components to communicate with. If you have\n          set up your own instance of eXist-db and TEI Publisher, you should change the URL\n        <span class=\"tei-emphasis2\">to point to your instance</span>\n        . This is important because the components\n          will expect the documents you want to display to be stored in the same instance.\n      </p>\n      <p class=\"tei-para\">\n        <span class=\"tei-tag code\">pb-document</span>\n        defines the document to be displayed. The path is relative to\n          the data root of the TEI Publisher instance. It also specifies the ODD to be used for the\n          transformation.\n      </p>\n      <p class=\"tei-para\">\n        <span class=\"tei-tag code\">pb-view</span>\n        is the main component for displaying the transformed content. It\n          references the\n        <span class=\"tei-tag code\">pb-document</span>\n        to use as source in its\n        <span class=\"tei--element\">src</span>\n        attribute. The Shakespeare does tag page breaks, so we switch to page-by-page view via the\n        <span class=\"tei--element\">view</span>\n        attribute to show the user only one page at a time. The default\n          would be to use a division-by-division view (\n        <span class=\"tei-code2 code\">view=\"div\"</span>\n        ), but you could also\n          request the entire content at once using\n        <span class=\"tei-code2 code\">view=\"single\"</span>\n        .\n      </p>\n      <p class=\"tei-para\">\n        <span class=\"tei-tag code\">pb-navigation</span>\n        adds forward/backward navigation buttons to the page,\n          allowing the user to switch to the next/previous page of the document. You can use various\n          types of buttons, but in this case we're choosing a\n        <span class=\"tei-tag code\">paper-button</span>\n        element with a\n          chevron\n        <span class=\"tei-tag code\">iron-icon</span>\n        (both\n        <span class=\"tei-tag code\">paper-button</span>\n        and\n        <span class=\"tei-tag code\">iron-icon</span>\n        are\n          part of the standard\n        <a href=\"https://www.webcomponents.org/author/PolymerElements\" class=\"tei-link4\" target=\"_new\">Polymer elements\n            library</a>\n        ).\n      </p>\n      <p class=\"tei-para\">\n        Another example of embedding TEI Publisher web components into a static website can be\n          found on our\n        <a href=\"https://teipublisher.onrender.com/\" class=\"tei-link5\" target=\"\">demo blog</a>\n        . It\n          was created with\n        <a href=\"https://gohugo.io\" class=\"tei-link5\" target=\"\">Hugo</a>\n        , a very popular website\n          generator which offers hundreds of ready-made themes to choose from. Here content is\n          written in markdown, but its not a problem to embed TEI content served by TEI\n          Publisher.\n      </p>\n    </pb-observable></div></div></body></html>",
    "footnotes": "",
    "userParams": {
        "webcomponents": 7
    },
    "collection": "doc"
}