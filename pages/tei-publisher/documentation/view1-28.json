{
    "format": "json",
    "view": "div",
    "doc": "documentation.xml",
    "root": "3.10.17",
    "rootNode": "3.10.17",
    "id": "docx",
    "odd": "docbook.odd",
    "next": "3.10.17.9",
    "previous": "3.10.15",
    "nextId": "docx-intro",
    "previousId": "format-jats",
    "switchView": null,
    "content": "<!DOCTYPE html><html><head></head><body><div class=\"content \"><div class=\"tei-section4\" id=\"docx\"><pb-observable data=\"3.10.17,3.10.17\" emit=\"transcription\"><h2 class=\"tei-title7 title\">MS Word DOCX format conversion</h2><p class=\"tei-para\"> Starting with the version 5.0.0 of the TEI Publisher a new docx handling module is\n        available to allow for ingesting documents in <span class=\"tei-emphasis2\">docx</span> format. Goal of this\n        module is to provide a way to import Word documents, preserving their textual content,\n        structure and basic semantics of the text, not to provide an authoritative mapping of\n        complete set of MS Word features to TEI. </p><p class=\"tei-para\">Docx format is relatively flat, thus reconstructing logical document structure like\n        divisions, lists and similar can be only based on certain heuristics. Likewise it is\n        impossible to deduce semantics attributed to certain formatting decisions. For that reason\n        TEI Publisher by intention ignores many style properties â€” trying to preserve as much as\n        possible would likely just add unnecessary \"noise\" and result in low-quality TEI. </p></pb-observable></div></div></body></html>",
    "footnotes": "",
    "userParams": {
        "webcomponents": 7
    },
    "collection": "doc"
}