{
    "format": "json",
    "view": "div",
    "doc": "documentation.xml",
    "root": "3.36.25",
    "rootNode": "3.36.25",
    "id": "new-vocabulary-search",
    "odd": "docbook.odd",
    "next": "3.38",
    "previous": "3.36.23",
    "nextId": "web-annotations",
    "previousId": "new-vocabulary-navigation",
    "switchView": null,
    "content": "<!DOCTYPE html><html><head></head><body><div class=\"content \"><div class=\"tei-section3\" id=\"new-vocabulary-search\"><pb-observable data=\"3.36.25,3.36.25\" emit=\"transcription\">\n      <h2 class=\"tei-title7 title\">Search</h2>\n      <p class=\"tei-para\"> Full text search is realized via the same modular approach that governs navigation. <span class=\"tei-filename code\">\n        modules/query.xql</span> is the main \"control room\", dispatching requests to functions\n        in specialized modules. See implementation of <span class=\"tei-filename code\">query-db.xql</span> or <span class=\"tei-filename code\">\n        query-tei.xql</span> before creating a dedicated module for your vocabulary. Make sure\n        to import your module into <span class=\"tei-filename code\">query.xql</span> . </p>\n    </pb-observable></div></div></body></html>",
    "footnotes": "",
    "userParams": {
        "webcomponents": 7
    },
    "collection": "doc"
}