{
    "format": "json",
    "view": "div",
    "doc": "documentation.xml",
    "root": "3.12.17.13.9",
    "rootNode": "3.12.17.13.9",
    "id": "extension-modules-behaviours",
    "odd": "docbook.odd",
    "next": "3.12.17.13.11",
    "previous": "3.12.17.13.7",
    "nextId": "extension-modules-behaviour-parameters",
    "previousId": "extension-configuration",
    "switchView": null,
    "content": "<!DOCTYPE html><html><head></head><body><div class=\"content \"><div class=\"tei-section3\" id=\"extension-modules-behaviours\"><pb-observable data=\"3.12.17.13.9,3.12.17.13.9\" emit=\"transcription\">\n          <h4 class=\"tei-title7 title\">Implementing Custom Behaviours</h4>\n          <p class=\"tei-para\">To be recognized by the library, an extension function must accept at least 4\n            default arguments, plus any number of custom parameters. The required parameters are:</p>\n          <dl><dt>$config</dt><dd>\n                <p class=\"tei-para\"> a map containing configuration information as well as function references to\n                  be called. The most important ones are <span class=\"tei-function code\">$config?apply($config, $node)</span>\n                  and <span class=\"tei-function code\">$config?apply-children($config, $node, $content)</span> . Both\n                  are function items and when called, continue processing with either a single <span class=\"tei-parameter code\">\n                  $node</span> or a sequence of nodes in <span class=\"tei-parameter code\">$content</span> . </p>\n              </dd><dt>$node</dt><dd>\n                <p class=\"tei-para\">the TEI element being processed at the moment</p>\n              </dd><dt>$class</dt><dd>\n                <p class=\"tei-para\"> a list of HTML class names to be used. This includes automatically generated\n                  class names as well as those passed via <span class=\"tei-parameter code\">@cssClass</span> on a\n                  model item. </p>\n              </dd><dt>$content</dt><dd>\n                <p class=\"tei-para\"> because <span class=\"tei-parameter code\">content</span> is defined for every model rule, it is\n                  always passed to a behaviour function (though it might be empty) </p>\n              </dd></dl>\n          <p class=\"tei-para\"> For all additional parameters, the processing model implementation tries to fill\n            each custom parameter with a corresponding value by looking through the <span class=\"tei-tag code\">param</span>\n            children of the <span class=\"tei-tag code\">model</span> in the ODD to find one with a name matching the\n            variable name. If no matching parameter can be found, the function argument will be set\n            to the empty sequence. You should not enforce a type or cardinality for any of the\n            custom parameters as this may lead to unexpected errors. The parameters may be empty or\n            contain more than one item. </p>\n          <p class=\"tei-para\"> For example, a custom behaviour called <span class=\"tei-code2 code\">code</span> for syntax highlighting in\n            an extension module named <span class=\"tei-filename code\">ext-html.xql</span> might look as follows: </p>\n          <pb-code-highlight class=\"tei-programlisting5\" language=\"xquery\" line-numbers=\"line-numbers\">xquery version \"3.1\";\n(:~ : Non-standard extension functions, mainly used for the documentation. :)\nmodule namespace pmf=\"http://www.tei-c.org/tei-simple/xquery/ext-html\";\ndeclare namespace tei=\"http://www.tei-c.org/ns/1.0\";\n\ndeclare function pmf:code($config as map(*), $node as element(), $class as xs:string+, $content as node()*, $lang as item()?) {\n    &lt;pre class=\"code {$class}\" data-language=\"{if ($lang) then $lang else 'xquery'}\"&gt;\n    {replace(string-join($content/node()), \"^\\s+?(.*)\\s+$\", \"$1\")}\n    &lt;/pre&gt;\n};</pb-code-highlight>\n          <p class=\"tei-para\"> It defines one function, <span class=\"tei-function code\">pmf:code</span> , which can be called from\n            the ODD as follows, provided that the <span class=\"tei-filename code\">ext-html.xql</span> module has been\n            configured as described in the <a href=\"/?odd=docbook.odd&amp;view=div&amp;id=extension-configuration\" class=\"tei-link3\" target=\"\">previous section</a>\n            . </p>\n          <pb-code-highlight class=\"tei-programlisting5\" language=\"xml\" line-numbers=\"line-numbers\">\n&lt;model behaviour=\"code\"&gt; \n    &lt;param name=\"lang\" value=\"@lang\"/&gt; \n&lt;/model&gt;\n        </pb-code-highlight>\n        </pb-observable></div></div></body></html>",
    "footnotes": "",
    "userParams": {
        "webcomponents": 7
    },
    "collection": "doc"
}