{
    "format": "json",
    "view": "div",
    "doc": "documentation.xml",
    "root": "3.18.19",
    "rootNode": "3.18.19",
    "id": "api-custom-endpoints",
    "odd": "docbook.odd",
    "next": "3.20",
    "previous": "3.18.17",
    "nextId": "i18n",
    "previousId": "api-endpoints",
    "switchView": null,
    "content": "<!DOCTYPE html><html><head></head><body><div class=\"content \"><div class=\"tei-section4\" id=\"api-custom-endpoints\"><pb-observable data=\"3.18.19,3.18.19\" emit=\"transcription\">\n      <h2 class=\"tei-title7 title\">Custom API endpoints</h2>\n      <p class=\"tei-para\"> Beyond the standard server-side functionality provided by TEI Publisher, careful\n        provisions have been made to allow users to add their own API endpoints. The <a href=\"/../api.html#operations-tag-default\" class=\"tei-link4\" target=\"_new\">Custom API</a> section\n        demonstrates how project-specific functionality can be added within the OAS API scheme. </p>\n      <p class=\"tei-para\"> All that is required is to edit the <span class=\"tei-filename code\">modules/custom-api.json</span> file\n        and add specifications for custom endpoints in JSON format. The\n          <span class=\"tei-parameter code\">operationId</span> property specifies the XQuery function to be called to\n        process the request. All function module with the function definition needs to be imported\n        into <span class=\"tei-filename code\"> modules/custom-api.xql</span> so that the request can be correctly\n        resolved. </p>\n      <p class=\"tei-para\"> The function implementation can either be added to the XQuery module <span class=\"tei-filename code\">\n          modules/custom-api.xql</span> or to a new module, which should be imported into this\n        file to make it known. See the <a href=\"https://github.com/eeditiones/oas-router\" class=\"tei-link4\" target=\"_new\">README</a> of the oas-router\n        package for more information about how to write a request handler function. </p>\n      <figure class=\"tei-figure2 figure\"><span class=\"tei--element\">\n          <span class=\"tei--element\">\n            <img src=\"api-custom-json.png\" class=\"tei-imagedata2\" title=\"\" style=\"width: 900px; \">\n          </span>\n        </span><figcaption>Custom API specification - show article</figcaption></figure>\n      <p class=\"tei-para\"> To reference a custom function declared directly in\n          <span class=\"tei-filename code\">modules/custom-api.xql</span>, use the prefix <span class=\"tei-parameter code\">custom:</span>\n        in the <span class=\"tei-parameter code\">operationId</span>. For functions in imported modules, use the prefix\n        defined in the import statement. </p>\n    </pb-observable></div></div></body></html>",
    "footnotes": "",
    "userParams": {
        "webcomponents": 7
    },
    "collection": "doc"
}