{
    "format": "json",
    "view": "div",
    "doc": "documentation.xml",
    "root": "3.16.21.11",
    "rootNode": "3.16.21.11",
    "id": "presentation-manifests",
    "odd": "docbook.odd",
    "next": "3.16.21.13",
    "previous": "3.16.21.9",
    "nextId": "presentation-manifest-config",
    "previousId": "passing-facsimiles",
    "switchView": null,
    "content": "<!DOCTYPE html><html><head></head><body><div class=\"content \"><div class=\"tei-section4\" id=\"presentation-manifests\"><pb-observable data=\"3.16.21.11,3.16.21.11\" emit=\"transcription\">\n        <h3 class=\"tei-title7 title\">Using IIIF presentation manifests</h3>\n        <p class=\"tei-para\">A IIIF presentation manifest is a JSON structure describing a collection of resources. <span class=\"tei-tag code\">pb-tify</span> expects to load a single manifest and takes all necessary information from there. If you have an external image database, it may already be able to deliver a manifest. If not, you can easily generate one on the fly by creating an API endpoint. This approach is demonstrated by the Shakespeare example in TEI Publisher, which proceeds as follows:</p>\n        <ol class=\"tei-procedure\"><li class=\"tei-step\">\n            <p class=\"tei-para\"><span class=\"tei-link2\"><pb-edit-xml path=\"/db/apps/tei-publisher/modules/custom-api.json\">modules/custom-api.json<iron-icon icon=\"icons:open-in-new\"></iron-icon></pb-edit-xml></span> defines an endpoint <span class=\"tei-parameter code\">/api/iiif/{path}</span> and the corresponding handler in <span class=\"tei-filename code\">modules/iiif.xql</span>, function <span class=\"tei-function code\">iiif:manifest</span>. The <span class=\"tei-parameter code\">path</span> parameter is expected to point to an existing TEI document.</p>\n          </li><li class=\"tei-step\">\n            <p class=\"tei-para\">The XQuery code in function <span class=\"tei-function code\">iiif:canvases</span> walks through each <span class=\"tei-tag code\">pb</span> element in the TEI to output a IIIF canvas for the linked image.</p>\n          </li><li class=\"tei-step\"><p class=\"tei-para\">Function <span class=\"tei-function code\">iiif:manifest</span> adds additional metadata fields like title, language or download links to the manifest.</p></li><li class=\"tei-step\">\n            <p class=\"tei-para\"><span class=\"tei-link2\"><pb-edit-xml path=\"/db/apps/tei-publisher/templates/pages/shakespeare.html\">templates/pages/shakespeare.html<iron-icon icon=\"icons:open-in-new\"></iron-icon></pb-edit-xml></span> includes the <span class=\"tei-tag code\">pb-tify</span> web component, pointing it to the custom API endpoint:</p>\n            <pb-code-highlight class=\"tei-synopsis4\" language=\"xml\">&lt;pb-tify subscribe=\"transcription\" emit=\"transcription\" manifest=\"api/iiif/${docid}\" \n    data-template=\"pages:parse-params\"&gt;&lt;/pb-tify&gt;</pb-code-highlight>\n          </li></ol>\n        <p class=\"tei-para\">The manifest to be loaded can either be specified via the <span class=\"tei--element\">@manifest</span> attribute on the <span class=\"tei-tag code\">pb-tify</span> component, or it may be\n          provided dynamically via <span class=\"tei-tag code\">pb-facs-link</span> elements elsewhere on the page or in content generated by an ODD. In this case the\n          <span class=\"tei--element\">@facs</span> attribute of <span class=\"tei-tag code\">pb-facs-link</span> should contain the URL to the manifest rather than a single IIIF image.</p>\n        <p class=\"tei-para\">Switching to a specific page can also be done via <span class=\"tei-tag code\">pb-facs-link</span>: the <span class=\"tei--element\">@order</span> attribute is interpreted as a page number\n          (starting with 1) and <span class=\"tei-tag code\">pb-tify</span> will show the corresponding image when <span class=\"tei-tag code\">pb-facs-link</span> is triggered, i.e. the user moves the mouse\n          over or clicks the element (the <span class=\"tei--element\">@trigger</span> attribute takes the values \"mouseover\" or \"click\"). If you would like a\n          <span class=\"tei-tag code\">pb-facs-link</span> to trigger manifest or page loading upon load, specify the boolean attribute <span class=\"tei--element\">@emit-on-load</span>. The Shakespeare\n          example does load the correct manifest in this way, i.e. by outputting a <span class=\"tei-tag code\">pb-facs-link</span> through the ODD, using <span class=\"tei--element\">@manifest</span> and\n          <span class=\"tei--element\">@order</span> to select the page currently shown in the transcription.</p>\n      </pb-observable></div></div></body></html>",
    "footnotes": "",
    "userParams": {
        "webcomponents": 7
    },
    "collection": "doc"
}