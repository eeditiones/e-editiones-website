{
    "format": "json",
    "view": "div",
    "doc": "documentation.xml",
    "root": "3.26.15.21",
    "rootNode": "3.26.15.21",
    "id": "customizations6-7",
    "odd": "docbook.odd",
    "next": "3.26.15.23",
    "previous": "3.26.15.19",
    "nextId": "customizations6-7-cleanup",
    "previousId": "updating-config",
    "switchView": null,
    "content": "<!DOCTYPE html><html><head></head><body><div class=\"content \"><div class=\"tei-section4\" id=\"customizations6-7\"><pb-observable data=\"3.26.15.21,3.26.15.21\" emit=\"transcription\">\n        <h3 class=\"tei-title7 title\">Check for other customizations</h3>\n        <p class=\"tei-para\">In most cases you will now be able to rebuild your custom app, redeploy it to eXist\n          and test. If you encounter any error messages, they are most likely due to additional\n          modifications you applied to your custom app. These are usually located in two main\n          areas:</p>\n        <dl><dt>Custom HTML templating functions</dt><dd>\n              <p class=\"tei-para\"> Earlier versions of TEI Publisher relied heavily on eXist's HTML templating\n                framework and custom apps would add their own templating functions into <span class=\"tei-filename code\">\n                  modules/app.xql</span> (or additional modules). This approach is still\n                perfectly valid. </p>\n              <p class=\"tei-para\"> Everything will work as expected if you've just extended <span class=\"tei-filename code\">\n                  modules/app.xql</span>. However, if you have added other modules containing\n                templating functions, now you need to import these explicitly into <span class=\"tei-filename code\">\n                  modules/custom-api.xql</span>. </p>\n            </dd><dt>Custom XQuery main modules</dt><dd>\n              <p class=\"tei-para\"> If your custom app makes direct calls to XQuery main modules (e.g. via the\n                  <span class=\"tei-code2 code\"> pb-load</span> component), these have to be rewritten. TEI Publisher 7\n                expects all API calls to go through the Open API router - direct calls to XQuery\n                modules are no longer supported. Therefore you need to transform your code into\n                functions which can be called via the Open API, e.g. by adding them to\n                  <span class=\"tei-filename code\">modules/custom-api.xql</span> or importing them there. </p>\n            </dd></dl>\n      </pb-observable></div></div></body></html>",
    "footnotes": "",
    "userParams": {
        "webcomponents": 7
    },
    "collection": "doc"
}