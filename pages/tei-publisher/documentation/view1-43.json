{
    "format": "json",
    "view": "div",
    "doc": "documentation.xml",
    "root": "3.12.11.9.13",
    "rootNode": "3.12.11.9.13",
    "id": "pm-syntax-model-children",
    "odd": "docbook.odd",
    "next": "3.12.11.9.15",
    "previous": "3.12.11.9",
    "nextId": "model-styling",
    "previousId": "pm-syntax-model",
    "switchView": null,
    "content": "<!DOCTYPE html><html><head></head><body><div class=\"content \"><div class=\"tei-section4\" id=\"pm-syntax-model-children\"><pb-observable data=\"3.12.11.9.13,3.12.11.9.13\" emit=\"transcription\">\n          <h4 class=\"tei-title7 title\">\n            <span class=\"tei-tag code\">model</span> children and attributes: </h4>\n          <p class=\"tei-para\">\n            </p><ul class=\"tei-itemizedlist\"><li class=\"tei-listitem\">\n                <p class=\"tei-para\">\n                  <span class=\"tei-parameter code\">@predicate</span> : the condition under which this model applies,\n                  given as an XPath Predicate Expression </p>\n              </li><li class=\"tei-listitem\">\n                <p class=\"tei-para\">\n                  <span class=\"tei-parameter code\">@behaviour</span> : names the function which this processing model\n                  uses in order to produce output; possible values include: alternate, block,\n                  figure, heading, inline, link, list, note, paragraph </p>\n              </li><li class=\"tei-listitem\">\n                <p class=\"tei-para\">\n                  <span class=\"tei-parameter code\">@output</span> : identifier of the intended output for which this\n                  model applies; applies to all output if no @output is present on a\n                    <span class=\"tei-tag code\">model</span>\n                </p>\n              </li><li class=\"tei-listitem\">\n                <p class=\"tei-para\">\n                  <span class=\"tei-parameter code\">@useSourceRendition</span> : whether to obey any rendition\n                  attribute which is present in the source document </p>\n              </li><li class=\"tei-listitem\">\n                <p class=\"tei-para\">\n                  <span class=\"tei-parameter code\">@cssClass</span> : one or more CSS class names which should be\n                  added to the resulting output element where applicable </p>\n              </li><li class=\"tei-listitem\">\n                <p class=\"tei-para\">\n                  <span class=\"tei-tag code\">param</span> : allows to pass parameters to @behaviour function; parameters\n                  available depend on the behaviour in question; when parameters are not explicitly\n                  passed, default values for those are assumed; all behaviour functions use current\n                  element as default content </p>\n              </li><li class=\"tei-listitem\">\n                <p class=\"tei-para\">\n                  <span class=\"tei-tag code\">outputRendition</span> : supplies information about the desired output\n                  rendition in CSS; its attribute @scope provides a way of defining\n                  ‘pseudo-elements’ eg: first-line, first-letter, before, after </p>\n              </li></ul>\n          <p></p>\n          <p class=\"tei-para\"> Model explicitly specifying content parameter: for <span class=\"tei-tag code\">app</span> entries only\n            content of its <span class=\"tei-tag code\">lem</span> child is to be displayed (as an inline chunk of text): </p>\n          <pb-code-highlight class=\"tei-programlisting5\" language=\"xml\">&lt;elementSpec mode=\"change\" ident=\"app\"&gt;\n  &lt;model behaviour=\"inline\"&gt;\n    &lt;param name=\"content\" value=\"lem\"/&gt;\n  &lt;/model&gt;\n&lt;/elementSpec&gt;</pb-code-highlight>\n          <p class=\"tei-para\"> Model specifying output rendition: contents of <span class=\"tei-tag code\">ex</span> elements are to be\n            displayed in italic and wrapped in parentheses: </p>\n          <pb-code-highlight class=\"tei-programlisting5\" language=\"xml\">&lt;elementSpec mode=\"change\" ident=\"ex\"&gt;\n  &lt;model behaviour=\"inline\"&gt;\n    &lt;outputRendition&gt;font-style: italic;&lt;/outputRendition&gt;\n    &lt;outputRendition scope=\"before\"&gt;\n      content:\"(\";&lt;/outputRendition&gt;\n    &lt;outputRendition scope=\"after\"&gt;content:\")\";&lt;/outputRendition&gt;\n  &lt;/model&gt;\n&lt;/elementSpec&gt;</pb-code-highlight>\n          <p class=\"tei-para\"> Sometimes different processing models are required for the same element in\n            different contexts. For example, we may wish to process the <span class=\"tei-tag code\">quote</span> element as\n            an inline italic element when it appears inside a <span class=\"tei-tag code\">p</span> element, but as an\n            indented block when it appears elsewhere. To achieve this, we need to change the\n            specification for the <span class=\"tei-tag code\">quote</span> element to include two <span class=\"tei-tag code\">model</span> elements\n            as follows: </p>\n          <pb-code-highlight class=\"tei-programlisting5\" language=\"xml\">&lt;elementSpec mode=\"change\" ident=\"quote\"&gt;\n  &lt;model predicate=\"ancestor::p\" behaviour=\"inline\"&gt;\n    &lt;outputRendition&gt;font-style: italic;&lt;/outputRendition&gt;\n  &lt;/model&gt;\n  &lt;model behaviour=\"block\"&gt;\n    &lt;outputRendition&gt;\n      left-margin: 2em;\n    &lt;/outputRendition&gt;\n  &lt;/model&gt;\n&lt;/elementSpec&gt;</pb-code-highlight>\n          <p class=\"tei-para\"> The first processing model will be used only for <span class=\"tei-tag code\">quote</span> elements which\n            match the XPath expression given as value for the <span class=\"tei-parameter code\">@predicate</span>\n            attribute. Other element occurrences will use the second processing model. Set of\n            multiple <span class=\"tei-tag code\">model</span> statements is regarded as an alternation and only the first\n            model with <span class=\"tei-parameter code\">@predicate</span> matching current context is applied.\n          </p>\n        </pb-observable></div></div></body></html>",
    "footnotes": "",
    "userParams": {
        "webcomponents": 7
    },
    "collection": "doc"
}