{
    "format": "json",
    "view": "div",
    "doc": "documentation.xml",
    "root": "3.25.9",
    "rootNode": "3.25.9",
    "id": "upgrade7",
    "odd": "docbook.odd",
    "next": "3.25.9.9",
    "previous": "3.25",
    "nextId": "upgrade71",
    "previousId": "updating",
    "switchView": null,
    "content": "<!DOCTYPE html>\n<div class=\"content \"><div class=\"tei-section3\" id=\"upgrade7\"><pb-observable data=\"3.25.9,3.25.9\" emit=\"transcription\"><h2 class=\"tei-title6 title\">Upgrading from TEI Publisher 7 to 7.x</h2><p class=\"tei-para\">Upgrading an app generated by TEI Publisher 7 to another minor release involves the following general steps:</p><ol class=\"tei-procedure\"><li class=\"tei-step\">\n          <p class=\"tei-para\">Update the webcomponents library (also see the <a href=\"https://faq.teipublisher.com/webcomponents/version-upgrade/\" class=\"tei-link5\" target=\"\">faq</a>). The version used is defined by a single variable in <span class=\"tei-filename code\">modules/config.xqm</span>:</p>\n          <pb-code-highlight class=\"tei-synopsis4\" language=\"xquery\">declare variable $config:webcomponents := \"1.24.12\";</pb-code-highlight>\n        </li><li class=\"tei-step\">\n          <p class=\"tei-para\">Update server-side modules: those live in <span class=\"tei-filename code\">modules/lib</span>. You can safely remove the entire folder and replace it with the corresponding one from the new version.</p>\n        </li></ol></pb-observable></div></div>",
    "footnotes": "",
    "userParams": {
        "webcomponents": 7
    },
    "collection": "doc"
}