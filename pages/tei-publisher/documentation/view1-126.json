{
    "format": "json",
    "view": "div",
    "doc": "documentation.xml",
    "root": "3.36.17.15",
    "rootNode": "3.36.17.15",
    "id": "new-vocabulary-foo",
    "odd": "docbook.odd",
    "next": "3.36.19",
    "previous": "3.36.17",
    "nextId": "new-vocabulary-default-view",
    "previousId": "new-vocabulary-odd",
    "switchView": null,
    "content": "<!DOCTYPE html><html><head></head><body><div class=\"content \"><div class=\"tei-section3\" id=\"new-vocabulary-foo\"><pb-observable data=\"3.36.17.15,3.36.17.15\" emit=\"transcription\">\n        <h3 class=\"tei-title7 title\">Case study: foo vocabulary</h3>\n        <p class=\"tei-para\"> Let's consider an imaginary vocabulary called <span class=\"tei-emphasis2\">foo</span> . All\n          documents in this vocabulary will belong to the <span class=\"tei-code2 code\">http://foo.io</span> namespace.\n          Simple document could look as follows: </p>\n        <pb-code-highlight class=\"tei-programlisting5\" language=\"xml\" line-numbers=\"line-numbers\">\n        &lt;fooStart xmlns=\"http://foo.io\"&gt;\n          &lt;foo&gt;My foo document&lt;/foo&gt;\n          &lt;bar&gt;About something very important for foo community.&lt;/bar&gt;\n        &lt;/fooStart&gt;\n        </pb-code-highlight>\n        <p class=\"tei-para\"> Let's save this document in the <span class=\"tei-filename code\">playground</span> collection as <span class=\"tei-filename code\">\n          foo.xml</span> . </p>\n        <p class=\"tei-para\"> Unfortunately a request to retrieve this document in Publisher fails with <span class=\"tei-emphasis2\">the\n          server did not return any content</span> error message. </p>\n        <pb-code-highlight class=\"tei-programlisting5\" language=\"xml\" line-numbers=\"line-numbers\">http://localhost:8080/exist/apps/tei-publisher/playground/foo.xml</pb-code-highlight>\n        <p class=\"tei-para\"> Fixing this will require creating a new ODD for <span class=\"tei-emphasis2\">foo</span> vocabulary. </p>\n        <p class=\"tei-para\"> Create a new ODD as described previously. Use <span class=\"tei-parameter code\">document</span>\n          behaviour for <span class=\"tei-tag code\">fooStart</span> element and perhaps <span class=\"tei-tag code\">inline</span> with an <span class=\"tei-tag code\">\n          outputRendition</span> set to <span class=\"tei-parameter code\">italic</span> for <span class=\"tei-tag code\">foo</span> element.\n          Please note to specify the ODD for your vocabulary. </p>\n\n\n        <p class=\"tei-para\"> Very bare bones ODD file for a fictional <span class=\"tei-emphasis2\">Foo</span> vocabulary could\n          look as follows: </p>\n        <figure class=\"tei-figure2 figure\"><span class=\"tei--element\">\n            <span class=\"tei--element\">\n              <img src=\"foo-odd.png\" class=\"tei-imagedata2\" title=\"\">\n            </span>\n          </span><figcaption>ODD for Foo</figcaption></figure>\n\n        <p class=\"tei-para\">Or, in XML form:</p>\n        <pb-code-highlight class=\"tei-programlisting5\" language=\"xml\" line-numbers=\"line-numbers\">\n&lt;schemaSpec start=\"fooStart\" ident=\"foo\" ns=\"http://foo.io\"&gt; \n   &lt;elementSpec ident=\"foo\" mode=\"add\"&gt;\n       &lt;model behaviour=\"inline\"&gt;\n           &lt;outputRendition&gt;font-style: italic;&lt;/outputRendition&gt;\n       &lt;/model&gt;\n   &lt;/elementSpec&gt;\n   &lt;elementSpec ident=\"fooStart\" mode=\"add\"&gt;\n       &lt;model behaviour=\"document\"/&gt;\n   &lt;/elementSpec&gt;\n&lt;/schemaSpec&gt;\n        </pb-code-highlight>\n        <p class=\"tei-para\"> With this in place we could reformulate our request to explicitly specify the ODD to\n          use and a <span class=\"tei-parameter code\">single</span> view. </p>\n        <pb-code-highlight class=\"tei-programlisting5\" language=\"xml\" line-numbers=\"line-numbers\">http://localhost:8080/exist/apps/tei-publisher/playground/foo.xml?odd=foo&amp;view=single</pb-code-highlight>\n        <figure class=\"tei-figure2 figure\"><span class=\"tei--element\">\n            <span class=\"tei--element\">\n              <img src=\"foo-single-view.png\" class=\"tei-imagedata2\" title=\"\">\n            </span>\n          </span><figcaption>foo.xml rendered with foo.odd in single view</figcaption></figure>\n        <div class=\"tei-note3 note\"><h4 class=\"tei-title4\">Note</h4><p class=\"tei-para\"> It is necessary to use <span class=\"tei-parameter code\">single</span> view along with the <span class=\"tei-parameter code\">\n            foo.odd</span> . Otherwise, the app default view would be used, which in TEI\n            Publisher is normally set to <span class=\"tei-parameter code\">div</span> . As we already mentioned,\n            implementation of view parameters needs to be vocabulary-specific to work. Since <span class=\"tei-emphasis2\">\n            foo</span> vocabulary doesn't yet have navigation customized, TEI Publisher will\n            fall back to TEI and try to locate <span class=\"tei-tag code\">tei:div</span> elements, which obviously cannot\n            be found in our test document in foo namespace. </p></div>\n      </pb-observable></div></div></body></html>",
    "footnotes": "",
    "userParams": {
        "webcomponents": 7
    },
    "collection": "doc"
}