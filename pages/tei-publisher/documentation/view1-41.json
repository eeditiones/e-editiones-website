{
    "format": "json",
    "view": "div",
    "doc": "documentation.xml",
    "root": "3.12.11",
    "rootNode": "3.12.11",
    "id": "pm-syntax",
    "odd": "docbook.odd",
    "next": "3.12.11.9",
    "previous": "3.12.9.19",
    "nextId": "pm-syntax-model",
    "previousId": "oddxml",
    "switchView": null,
    "content": "<!DOCTYPE html><html><head></head><body><div class=\"content \"><div class=\"tei-section4\" id=\"pm-syntax\"><pb-observable data=\"3.12.11,3.12.11\" emit=\"transcription\"><h2 class=\"tei-title7 title\">Processing Model Syntax</h2><p class=\"tei-para\">TEI gives users a lot of freedom: there's always more than one way to encode your\n        material! To maintain interoperability and sustainability, you need a way to formally\n        describe the schema used as well as document editorial guidelines and transcription\n        processes. TEI ODD was designed for the purpose of expressing all this in the TEI language\n        itself. But how a document should be rendered was previously still considered to be the\n        responsibility of external publishing software and could not be described within the\n        ODD.</p><p class=\"tei-para\"> The advent of the TEI Processing Model changed this! The intended processing for all\n        elements can now be expressed within the TEI vocabulary as part of the ODD thus fulfilling\n        its promise of <span class=\"tei-emphasis1\">One Document Does It All</span>. Markup elements\n        are mapped to a small set of abstract transformation functions, called <span class=\"tei-emphasis1\"> behaviours</span>. Basic styling features can be set directly within the ODD using\n        CSS. The processing model is media-agnostic: behaviours and rendition styles are\n        transparently translated into different output media types like HTML, XSL-FO, LaTeX, or\n        ePUB. A single ODD can handle a multitude of output media types with just a few small\n        adjustments. </p></pb-observable></div></div></body></html>",
    "footnotes": "",
    "userParams": {
        "webcomponents": 7
    },
    "collection": "doc"
}