{
    "format": "json",
    "view": "div",
    "doc": "documentation.xml",
    "root": "3.12.11.9",
    "rootNode": "3.12.11.9",
    "id": "pm-syntax-model",
    "odd": "docbook.odd",
    "next": "3.12.11.9.13",
    "previous": "3.12.11",
    "nextId": "pm-syntax-model-children",
    "previousId": "pm-syntax",
    "switchView": null,
    "content": "<!DOCTYPE html><html><head></head><body><div class=\"content \"><div class=\"tei-section3\" id=\"pm-syntax-model\"><pb-observable data=\"3.12.11.9,3.12.11.9\" emit=\"transcription\"><h3 class=\"tei-title7 title\">\n          <span class=\"tei-tag code\">model</span> element </h3><p class=\"tei-para\">\n          <span class=\"tei-tag code\">model</span> element is primarily used to document the intended processing for a given\n          element. One or more of these elements may appear directly within an <span class=\"tei-tag code\">elementSpec</span>\n          element specification to define the processing anticipated for that element. Where\n          multiple <span class=\"tei-tag code\">model</span> elements appear, they are understood to document mutually\n          exclusive processing scenarios, possibly for different outputs or applicable in different\n          contexts. </p><p class=\"tei-para\"> A processing model defines on an abstract level how a given element may be\n          transformed to produce one or more outputs. The model is expressed in terms of <span class=\"tei-emphasis1\">behaviours</span> and their parameters, using high-level formatting\n          concepts, such as <span class=\"tei-parameter code\">block</span> , <span class=\"tei-parameter code\">inline</span> , <span class=\"tei-parameter code\">\n          note</span> or <span class=\"tei-parameter code\">heading</span> . A processing model is thus a template\n          description, used to generate the code needed by the publishing application to process the\n          source document into required output. </p><p class=\"tei-para\"> The example below depicts a situation where a single model is defined for the <span class=\"tei-tag code\">\n          app</span> element. As no <span class=\"tei-parameter code\">@predicate</span> or <span class=\"tei-parameter code\">@output</span>\n          are specified, this model applies for all contexts in which <span class=\"tei-tag code\">app</span> may appear and\n          all possible outputs. Thus all <span class=\"tei-tag code\">app</span> elements will be transformed into inline\n          chunks of text containing only contents of <span class=\"tei-tag code\">app</span> 's <span class=\"tei-tag code\">lem</span> child and\n          omitting any possible <span class=\"tei-tag code\">rdg</span> children. </p><pb-code-highlight class=\"tei-programlisting5\" language=\"xml\" line-numbers=\"line-numbers\">&lt;elementSpec mode=\"change\" ident=\"app\"&gt;\n  &lt;model behaviour=\"inline\"&gt;\n    &lt;param name=\"content\" value=\"lem\"/&gt;\n  &lt;/model&gt;\n&lt;/elementSpec&gt;</pb-code-highlight></pb-observable></div></div></body></html>",
    "footnotes": "",
    "userParams": {
        "webcomponents": 7
    },
    "collection": "doc"
}