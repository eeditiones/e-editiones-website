{
    "format": "json",
    "view": "div",
    "doc": "documentation.xml",
    "root": "3.32.9",
    "rootNode": "3.32.9",
    "id": "embedding-whole-doc",
    "odd": "docbook.odd",
    "next": "3.32.11",
    "previous": "3.32.7",
    "nextId": "embedding-webcomponents",
    "previousId": "embedding-examples",
    "switchView": null,
    "content": "<!DOCTYPE html><html><head></head><body><div class=\"content \"><div class=\"tei-section4\" id=\"embedding-whole-doc\"><pb-observable data=\"3.32.9,3.32.9\" emit=\"transcription\">\n      <h2 class=\"tei-title7 title\">Retrieving the whole document as a simple HTML</h2>\n      \n      <p class=\"tei-para\">Embedding results of applying Processing Model transformation on a document is even\n        simpler. Behind the scenes, TEI Publisher has a separate library part, which is essentially\n        an implementation of the TEI processing model. This library can be used independently to\n        retrieve the entire content of a TEI document as HTML, transformed through an ODD with\n        processing instructions.</p>\n      <p class=\"tei-para\">All you need is a small XQuery which calls the library modules, setting the correct\n        source document and ODD. Fortunately, TEI Publisher already contains a boilerplate XQuery\n        script for this job, which you can call as follows in your browser:</p>\n      <p class=\"tei-para\">\n        <a href=\"https://teipublisher.com/exist/apps/tei-publisher/api/document/test%2FF-rom.xml/html?odd=shakespeare.odd\" class=\"tei-link4\" target=\"_new\">\n          https://teipublisher.com/exist/apps/tei-publisher/api/document/test%2FF-rom.xml/html?odd=shakespeare.odd</a>\n      </p>\n      <p class=\"tei-para\"> This will retrieve the content of Shakespeare's <span class=\"tei-emphasis2\">Romeo and Juliet</span>\n        as an HTML page, transformed through the odd <span class=\"tei-filename code\">shakespeare.odd</span>. For\n        embedding an entire document in an iframe or similar, this should already be enough. Please\n        note that <span class=\"tei-emphasis1\">/</span> character in the path to the document\n          <span class=\"tei-parameter code\"> test/F-rom.xml</span> had to be URL encoded as <span class=\"tei-parameter code\">%2F</span>\n        . </p>\n    </pb-observable></div></div></body></html>",
    "footnotes": "",
    "userParams": {
        "webcomponents": 7
    },
    "collection": "doc"
}