{
    "format": "json",
    "view": "div",
    "doc": "documentation.xml",
    "root": "3.33.31",
    "rootNode": "3.33.31",
    "id": "custom-components-bundle",
    "odd": "docbook.odd",
    "next": "3.33.33",
    "previous": "3.33.29.13",
    "nextId": "custom-components-using",
    "previousId": "custom-components-demo",
    "switchView": null,
    "content": "<!DOCTYPE html><html><head></head><body><div class=\"content \"><div class=\"tei-section3\" id=\"custom-components-bundle\"><pb-observable data=\"3.33.31,3.33.31\" emit=\"transcription\">\n      <h2 class=\"tei-title6 title\">Bundling and distribution</h2>\n      <p class=\"tei-para\">\n        Any new component\n        <span class=\"tei-emphasis1\">must</span>\n        be explicitly imported by\n        <span class=\"tei-filename code\">pb-extension-bundle.js</span>\n        .\n      </p>\n      <pb-code-highlight class=\"tei-programlisting5\" language=\"js\" line-numbers=\"line-numbers\">\n        import './src/pb-clipboard.js';\n      </pb-code-highlight>\n      <p class=\"tei-para\">\n        Run\n        <span class=\"tei-code2 code\">npm build:production</span>\n        to generate a distribution bundle. The generated\n          library (located in\n        <span class=\"tei-filename code\">dist</span>\n        ) will include everything, including the\n          version of the\n        <span class=\"tei-code2 code\">pb-components</span>\n        library you are building upon and all\n          dependencies. As a result, you can use it as a drop-in replacement for\n        <span class=\"tei-code2 code\">pb-components</span>\n        package: in your custom project, for TEI Publisher itself or\n          Publisher-generated custom apps.\n      </p>\n    </pb-observable></div></div></body></html>",
    "footnotes": "",
    "userParams": {
        "webcomponents": 7
    },
    "collection": "doc"
}