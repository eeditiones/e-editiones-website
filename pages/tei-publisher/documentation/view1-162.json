{
    "format": "json",
    "view": "div",
    "doc": "documentation.xml",
    "root": "3.44.11",
    "rootNode": "3.44.11",
    "id": null,
    "odd": "docbook.odd",
    "next": null,
    "previous": "3.44.9",
    "nextId": null,
    "previousId": "hosting",
    "switchView": null,
    "content": "<!DOCTYPE html><html><head></head><body><div class=\"content \"><div class=\"tei-section4\"><pb-observable data=\"3.44.11,3.44.11\" emit=\"transcription\">\n      <h2 class=\"tei-title7 title\">Web components</h2>\n      <p class=\"tei-para\">By default TEI Publisher and apps generated from it load the user interface components from a global CDN\n        (content delivery network). For a long time this was the generally recommended approach. CDNs promised\n        reliability and fast, globally distributed access to resources. Web browsers can cache those resources\n        efficiently across applications.</p>\n      <p class=\"tei-para\">However, we recently experienced more and more difficulties with some CDN, in particular the one used by TEI\n      Publisher by default. As a result, pages may appear inaccessible or slow to users, even though TEI Publisher itself is\n      responsive and fast.</p>\n      <p class=\"tei-para\">For production deployments we therefore recommend to consider self-hosting the required component libraries.\n        This means: all javascript libraries are downloaded and bundled with your custom application. The build scripts\n        shipped with TEI Publisher and generated apps make this rather easy. The necessary steps are as follows:</p>\n      <ol class=\"tei-procedure\"><li class=\"tei-step\">\n          <p class=\"tei-para\">make sure you have <a href=\"https://nodejs.org\" class=\"tei-link5\" target=\"\">nodejs</a> with npm\n            installed; also check if the build property <span class=\"tei-code2 code\">npm</span> in your\n            <span class=\"tei-code2 code\">build.xml</span> (for generated apps) or <span class=\"tei-code2 code\">build.properties</span> (TEI Publisher app) points to\n            the npm binary.</p>\n        </li><li class=\"tei-step\">\n          <p class=\"tei-para\">edit <span class=\"tei-filename code\">modules/config.xqm</span> and change the value of variable\n            <span class=\"tei-code2 code\">$config:webcomponents</span> to \"local\":</p>\n          <pb-code-highlight class=\"tei-synopsis4\" language=\"xquery\">declare variable $config:webcomponents := \"local\";</pb-code-highlight>\n        </li><li class=\"tei-step\">\n          <p class=\"tei-para\">build your application package with the command <span class=\"tei-code2 code\">ant xar-local</span> (instead of just calling\n            ant) and deploy as usual</p>\n        </li></ol>\n    </pb-observable></div></div></body></html>",
    "footnotes": "",
    "userParams": {
        "webcomponents": 7
    },
    "collection": "doc"
}