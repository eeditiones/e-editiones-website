{
    "format": "json",
    "view": "div",
    "doc": "documentation.xml",
    "root": "3.34.31",
    "rootNode": "3.34.31",
    "id": "custom-components-bundle",
    "odd": "docbook.odd",
    "next": "3.34.33",
    "previous": "3.34.29.13",
    "nextId": "custom-components-using",
    "previousId": "custom-components-demo",
    "switchView": null,
    "content": "<!DOCTYPE html><html><head></head><body><div class=\"content \"><div class=\"tei-section3\" id=\"custom-components-bundle\"><pb-observable data=\"3.34.31,3.34.31\" emit=\"transcription\">\n      <h2 class=\"tei-title7 title\">Bundling and distribution</h2>\n      <p class=\"tei-para\"> Any new component <span class=\"tei-emphasis1\">must</span> be explicitly imported by <span class=\"tei-filename code\">\n        pb-extension-bundle.js</span> . </p>\n      <pb-code-highlight class=\"tei-programlisting5\" language=\"js\" line-numbers=\"line-numbers\">\n        import './src/pb-clipboard.js';\n      </pb-code-highlight>\n      <p class=\"tei-para\"> Run <span class=\"tei-code2 code\">npm build:production</span> to generate a distribution bundle. The generated\n        library (located in <span class=\"tei-filename code\">dist</span> ) will include everything, including the\n        version of the <span class=\"tei-code2 code\">pb-components</span> library you are building upon and all\n        dependencies. As a result, you can use it as a drop-in replacement for <span class=\"tei-code2 code\">pb-components</span>\n        package: in your custom project, for TEI Publisher itself or Publisher-generated custom\n        apps. </p>\n    </pb-observable></div></div></body></html>",
    "footnotes": "",
    "userParams": {
        "webcomponents": 7
    },
    "collection": "doc"
}