{
    "format": "json",
    "view": "div",
    "doc": "documentation.xml",
    "root": "3.46.7.14",
    "rootNode": "3.46.7.14",
    "id": null,
    "odd": "docbook.odd",
    "next": "3.46.9",
    "previous": "3.46.7.12",
    "nextId": "hosting",
    "previousId": null,
    "switchView": null,
    "content": "<!DOCTYPE html><html><head></head><body><div class=\"content \"><div class=\"tei-section4\"><pb-observable data=\"3.46.7.14,3.46.7.14\" emit=\"transcription\">\n        <h3 class=\"tei-title7 title\">Caching</h3>\n        <p class=\"tei-para\">While you can use a proxy to cache arbitrary contents based on timeouts and cache expiration, TEI\n          Publisher 8 includes some support for a more intelligent caching approach: if enabled, TEI Publisher will\n          answer to the <span class=\"tei-code2 code\">If-Modified-Since</span> HTTP header sent by the proxy. If any of the resources targetted\n          by the request have been modified since the given timestamp, TEI Publisher will process the request as usual.\n          However, if it finds that no modifications were applied in the meantime, it simply returns a 304 response\n          code, telling the proxy that it can safely use its cached version.</p>\n        <p class=\"tei-para\">To enable this feature, set the variable <span class=\"tei-code2 code\">$config:enable-proxy-caching</span> to true.</p>\n        <div class=\"tei-note3 note\"><p class=\"tei-para\">At the time of writing, only the most important API calls in TEI Publisher support\n            <span class=\"tei-code2 code\">If-Modified-Since</span>. Those include the API call for displaying a single page or division, which\n            is the most frequently called operation.</p></div>\n      </pb-observable></div></div></body></html>",
    "footnotes": "",
    "userParams": {
        "webcomponents": 7
    },
    "collection": "doc"
}