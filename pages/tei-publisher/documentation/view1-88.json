{
    "format": "json",
    "view": "div",
    "doc": "documentation.xml",
    "root": "3.22.21.9.13",
    "rootNode": "3.22.21.9.13",
    "id": "multiple-odds-collection",
    "odd": "docbook.odd",
    "next": "3.22.23",
    "previous": "3.22.21.9",
    "nextId": "appgen-export",
    "previousId": "multiple-odds",
    "switchView": null,
    "content": "<!DOCTYPE html><html><head></head><body><div class=\"content \"><div class=\"tei-section3\" id=\"multiple-odds-collection\"><pb-observable data=\"3.22.21.9.13,3.22.21.9.13\" emit=\"transcription\">\n          <h4 class=\"tei-title7 title\">Using different ODDs depending on the collection</h4>\n          <p class=\"tei-para\">\n            By default the same ODD will be used for all documents within the app. It is\n              possible though to organize documents into a\n            <a href=\"/?odd=docbook.odd&amp;view=div&amp;id=subcollections\" class=\"tei-link3\" target=\"\">hierarchy\n                of collections</a>\n            beneath\n            <span class=\"tei-parameter code\">$config:data-root</span>\n            and use\n              different ODDs and general view settings for each collection or document type.\n          </p>\n          <p class=\"tei-para\">\n            To do so, search for the function\n            <span class=\"tei-function code\">config:collection-config</span>\n            ,\n              which by default returns an empty sequence - meaning that the default configuration\n              should be used. Comment this out and enable the switch/case statement below to return\n              a different config depending on the current collection. The\n            <span class=\"tei-parameter code\">$collection</span>\n            and\n            <span class=\"tei-parameter code\">$docUri</span>\n            parameters be\n              relative paths, i.e. relative to\n            <span class=\"tei-parameter code\">$config:data-root</span>\n            . So for a\n              single level hierarchy as used in TEI Publisher by default,\n            <span class=\"tei-parameter code\">$collection</span>\n            will be either\n            <span class=\"tei-code2 code\">test</span>\n            ,\n            <span class=\"tei-code2 code\">playground</span>\n            or\n            <span class=\"tei-code2 code\">doc</span>\n            . For multi-level hierarchies it might\n              also be e.g.\n            <span class=\"tei-code2 code\">volume1/transcripts</span>\n            . In this case a simple switch/case might\n              not be enough, but you can just replace it with an if/then/else and apply any path\n              matching you like.\n          </p>\n\n          <pb-code-highlight class=\"tei-programlisting5\" language=\"xquery\" line-numbers=\"line-numbers\">\ndeclare function config:collection-config($collection as xs:string?, $docUri as xs:string?) {\n    (: Return empty sequence to use default config :)\n    ()\n\n    (: \n     : Replace line above with the following code to switch between different view configurations per collection.\n     : $collection corresponds to the relative collection path (i.e. after $config:data-root). \n     :)\n    (:\n    switch ($collection)\n        case \"playground\" return\n            map {\n                \"odd\": \"dodis.odd\",\n                \"view\": \"body\",\n                \"depth\": $config:pagination-depth,\n                \"fill\": $config:pagination-fill,\n                \"template\": \"facsimile.html\"\n            }\n        default return\n            ()\n    :)\n};\n          </pb-code-highlight>\n          <p class=\"tei-para\">Instead of switching by collection, you could also configure different views\n              depending on the type of document, e.g. by checking the type of the first div: </p>\n          <pb-code-highlight class=\"tei-synopsis4\" language=\"xquery\">doc($config:data-root || \"/\" || $docUri)//tei:body/tei:div/@type</pb-code-highlight>\n        </pb-observable></div></div></body></html>",
    "footnotes": "",
    "userParams": {
        "webcomponents": 7
    },
    "collection": "doc"
}